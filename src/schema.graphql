type Query {
  messages: [Message!]!
  message(id: ID!): Message
  description: String
}

type Mutation {
  createMessage(text: String!, author: String!, belongsIn: String!): Message
  deleteMessage(id: ID!): Message
  UpdateMessage(id: ID!): Message
  signup(email: String!, password: String!, firstname: String!, lastname: String!): AuthPayload
  login(email:String!, password: String!): AuthPayload
}

type Message {
  id: ID!
  text: String!
  author: User!
  belongsIn: Channel!
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  username: String!
  firstame: String!
  lastname: String!
  password: String!
  email: String!
  server: [Server]!
}

type Channel {
  id: ID!
  name: String!
  public: boolean!
  belongsIn: Server!
}

type Server {
  id: ID!
  name: String!
  owner: User!
}